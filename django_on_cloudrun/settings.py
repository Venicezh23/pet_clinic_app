"""
Django settings for django_on_cloudrun project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os
#import dj_database_url
from django.core.files.storage import default_storage
from google.oauth2 import service_account

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent
#BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-_un_=g&ea2%ls35_r3t!*2ty-i)x3-w-q@1=q+knq=3+&ws+p9'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

#ALLOWED_HOSTS = ['pet-health-tracker-382013273863.asia-southeast1.run.app', 'localhost', '127.0.0.1']
#ALLOWED_HOSTS = [
#    'localhost',
#    '127.0.0.1',
#    'https://pet-health-tracker-382013273863.asia-southeast1.run.app',
#]
ALLOWED_HOSTS = ['*']
#ALLOWED_HOSTS = ['django-on-cloudrun-ksx4vbtkqa-as.a.run.app']

print("ALLOWED_HOSTS:", os.getenv("DJANGO_ALLOWED_HOSTS"))
print("Effective ALLOWED_HOSTS:", ALLOWED_HOSTS)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'django_on_cloudrun',
    'accounts',
    'pets',
    'appointments',
    'notifications',
    'storages',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'django_on_cloudrun.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        #'DIRS': [os.path.join(BASE_DIR, "app/templates")],
        #'DIRS': [BASE_DIR / "app/templates"],
        #'DIRS': [os.path.join(BASE_DIR, "app", "templates")],
        'DIRS': [os.path.join(BASE_DIR, "templates")],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'django_on_cloudrun.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases


#DATABASES = {
#    'default': {
        #'ENGINE': 'django.db.backends.sqlite3',
        #'NAME': BASE_DIR / 'db.sqlite3',
#        'ENGINE': 'django.db.backends.postgresql',
#        'NAME': '<database_name>',
#        'USER': '<database_admin_name>',               # Default username unless you changed it
#        'PASSWORD': '<database password>',   # Set your password
#        'HOST': '127.0.0.1',          # PRIMARY_ADDRESS
#        'PORT': '5432',
#    }
#}

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': '<database name>',
        'USER': '<database_admin_name>',
        'PASSWORD': '<database password>',
        'HOST': '/cloudsql/pet-tracker-app-453709:asia-southeast1:django-dev-db',
        #'HOST': '127.0.0.1',
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/

#STATIC_URL = 'static/'


# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

#Media Files
#MEDIA_URL = '/media/'
#MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
#MEDIA_ROOT = BASE_DIR / 'media'

# Google Cloud Storage for media files
#DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'
# For Media Files
#STORAGES = {
#    "default": {
#        "BACKEND": "storages.backends.gcloud.GoogleCloudStorage",
#    },
#    "staticfiles": {
#        "BACKEND": "storages.backends.gcloud.GoogleCloudStorage",
#    }
#}

# Load credentials from the JSON file
GS_CREDENTIALS = service_account.Credentials.from_service_account_file(
    os.path.join(BASE_DIR, 'pet-tracker-app-453709-622cc6ce39f1.json')
)

GS_BUCKET_NAME = 'pet-tracker-media'
GS_PROJECT_ID = 'pet-tracker-app-453709'

MEDIA_URL = f'https://storage.googleapis.com/{GS_BUCKET_NAME}/pet_photos/'

STATIC_URL = "/static/"

# Use STORAGES exclusively
STORAGES = {
    "default": {
        "BACKEND": "storages.backends.gcloud.GoogleCloudStorage",
        "OPTIONS": {
            "bucket_name": GS_BUCKET_NAME,
        },
    },
    "staticfiles": {
        "BACKEND": "storages.backends.gcloud.GoogleCloudStorage",
        "OPTIONS": {
            "bucket_name": GS_BUCKET_NAME,
        },
    },
}

#GS_DEFAULT_ACL = "publicRead"

# Uncomment if you have any custom settings for static files
# STATICFILES_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'

# Uncomment if using django < 4.2
# DEFAULT_FILE_STORAGE = 'storages.backends.gcloud.GoogleCloudStorage'

# settings.py

CSRF_TRUSTED_ORIGINS = [
    'https://django-dev-app-382013273863.asia-southeast1.run.app',
    'https://django-dev-app-ksx4vbtkqa-as.a.run.app',
]